snippet module
    local ${1:module} = {}

    return $1
snippet class
    local ${1:CopyAndPasteinator} = {}
    $1.__index = $1

    type $1 = typeof(setmetatable({} :: {}, $1))

    function $1.new()
        local self = {}

        return setmetatable(self, $1)
    end

    return $1
snippet local
    local ${1:x} = ${2:true}
snippet fun
    function ${1:name}(${2:...})
        ${3:-- body}
    end
snippet if
    if ${1:condition} then
        ${2:return}
    end
snippet elif
    elseif ${1:condition} then
        ${0:-- body}
snippet ife
    if ${1:condition} then
        ${2:-- body}
    else
       ${3:-- body}
    end
snippet forin
    for ${1:_}, ${2:value} in ${3:{}} do
        ${4:-- body}
    end
snippet forrange
    for ${1:i} = ${2:1}, ${3:10} do
        ${4:-- body}
    end
snippet forstep
    for ${1:i} = ${2:1}, ${3:10}, ${4:-1} do
        ${5:-- body}
    end
snippet while
    while ${1:true} do
        ${2:-- body}
    end
snippet repeat
    repeat
        ${1:-- body}
    until ${2:condition}
snippet print
    print("${1:Hello world!}")
